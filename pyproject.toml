[project]
name = "fastapi-crud-tutorial"
version = "0.1.0"
description = "FastAPI CRUD tutorial application"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    "sqlalchemy>=2.0.0",
    "databases>=0.9.0",
    "psycopg2-binary>=2.9.9",
    "pytest>=8.0.0",
    "httpx>=0.26.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
    "aiosqlite>=0.21.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/fastapi_crud_tutorial"]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-asyncio",
    "httpx",
    "ruff",
    "mypy",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
lint = "ruff check {args:src}"
type = "mypy {args:src}"
format = "ruff format {args:src}"
docker-up = "docker-compose up -d"
docker-down = "docker-compose down"
docker-logs = "docker-compose logs -f"
docker-build = "docker-compose build"
dev = [
    "docker-up",
    "DATABASE_URL=sqlite:///./dev.db uvicorn fastapi_crud_tutorial.main:app --reload --host 0.0.0.0 --port 8000",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "FBT", # flake8-boolean-trap
    "Q",   # flake8-quotes
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "tests.*"
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true 